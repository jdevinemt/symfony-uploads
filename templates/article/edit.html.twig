{% extends 'base.html.twig' %}

{% block title %}Edit Article{% endblock %}

{% block body %}
    <h1>Edit the Article</h1>

    <hr>

    <div style="display:flex;">
        <div>
            <h3>Details</h3>
            {{ include('article/_form.html.twig', {articleForm}) }}
        </div>
        <div>
            <h3>References</h3>

            <ul class="js-reference-list" data-url="{{ path('admin_article_references', {id: article.id}) }}"></ul>

            <form
                    action="{{ path('admin_article_add_reference', {id: article.id}) }}"
                    method="post"
                    enctype="multipart/form-data"
                    class="dropzone js-reference-dropzone"
            ></form>
        </div>
    </div>
{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://unpkg.com/dropzone@5/dist/min/dropzone.min.js"></script>
    <script>
        Dropzone.autoDiscover = false;

        document.addEventListener('DOMContentLoaded', () => {
            const referenceList = new ReferenceList(document.querySelector('.js-reference-list'));
            initializeDropzone(referenceList);
        });

        /**
         * @param {ReferenceList} referenceList
         */
        function initializeDropzone(referenceList){
            const formElement = document.querySelector('.js-reference-dropzone');

            if(!formElement){
                return;
            }

            new Dropzone(formElement, {
                paramName: 'reference',
                init: function(){
                    this.on('success', (file, data) => {
                        referenceList.addReference(data);
                    });

                    this.on('error', (file, data) => {
                        if(data.message){
                            this.emit('error', file, data.message);
                        }
                    });
                }
            });
        }
        
        class ReferenceList
        {
            constructor(element){
                this.element = element;
                this.references = [];
                this.render();
                fetch(this.element.dataset.url)
                    .then(response => response.json())
                    .then(references => {
                        this.references = references;
                        this.render();
                    })
                ;
            }

            render(){
                const itemsHtml = this.references.map(reference => {
                    return `
<li class="list-group-item d-flex justify-content-between align-items-center">
    ${reference.originalFilename}
    <span>
        <a href="/admin/article/references/${reference.id}/download">Download</a>
    </span>
</li>
`
                });
                this.element.innerHTML = itemsHtml.join('');
            }

            addReference(reference){
                this.references.push(reference);
                this.render();
            }
        }
    </script>
{% endblock %}

{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://unpkg.com/dropzone@5/dist/min/dropzone.min.css" type="text/css" />
{% endblock %}